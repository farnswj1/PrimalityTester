version: "3.2"
services:
  postgres:
    container_name: postgres
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: primality_tester
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: redis:5
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  jenkins:
    container_name: jenkins
    image: jenkins
    build: jenkins
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
  backend:
    container_name: backend
    image: backend
    build: backend
    restart: always
    command: bash -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn backend.wsgi -w 4 -b 0.0.0.0:8000"
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
  celery_worker:
    container_name: celery_worker
    image: backend
    build: backend
    restart: always
    command: celery -A backend worker -l info
    env_file:
      - ./backend/.env
    depends_on:
      - backend
  celery_beat:
    container_name: celery_beat
    image: backend
    build: backend
    restart: always
    command: celery -A backend beat -l info
    env_file:
      - ./backend/.env
    depends_on:
      - celery_worker
  frontend:
    container_name: frontend
    image: frontend
    build: frontend
    restart: always
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - backend
  nginx:
    container_name: nginx
    image: nginx
    build: nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - frontend
volumes:
  postgres_data:
  redis_data:
  jenkins_data:
